<ResourceDictionary x:Class="TGELoader.Dictionaries.ControlTemplates"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="Foreground" Value="{StaticResource FontGreyWhiteBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border" Background="{StaticResource BackgroundGrey5Brush}" BorderThickness="1">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{StaticResource BorderBrush}" />
                        </Border.BorderBrush>
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Border" Property="Padding" Value="0,3,0,3" />
                            <Setter TargetName="Border" Property="CornerRadius" Value="4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style TargetType="{x:Type MenuItem}">
        <Setter Property="BorderThickness" Value="0" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HoverGreyBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource IconBrush}" />
                <Setter Property="Foreground" Value="{StaticResource FontGreyWhiteBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>-->

    <Style TargetType="{x:Type TextBlock}" x:Key="LightTextBlockStyle">
        <Setter Property="Foreground" Value="{StaticResource FontGreyWhiteBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="TextBoxStyle">
        <Setter Property="Foreground" Value="{StaticResource FontLightGreyBrush}"/>
        <Setter Property="Background" Value="{StaticResource BackgroundGrey5Brush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource HoverGreyBrush}"/>
        <Setter Property="SelectionBrush" Value="White"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="0,2"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <!-- Remove the blue outline when focused -->
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource SelectedBrush}"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="1"/>
                        </Trigger>

                        <!-- Hover state for custom border color -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource SelectedBrush}"/>
                            <Setter Property="BorderThickness" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="{x:Type TextBox}" BasedOn="{StaticResource TextBoxStyle}">
        <EventSetter Event="KeyDown" Handler="OnTextBox_KeyDown"/>
    </Style>

    <Style x:Key="SimpleButton" TargetType="{x:Type Button}">
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrushBrush}"/>
        <Setter Property="Background" Value="{StaticResource BackgroundBlackBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource IconBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="False" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource HoverGreyBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{StaticResource FontGreyBrush}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource BackgroundGrey5Brush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrushBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource FontGreyWhiteBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="5,3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="3"/>
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                      Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
                            <Setter Property="Background" Value="{StaticResource FontGreyBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
                            <Setter Property="Background" Value="{StaticResource HoverGreyBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource FontGreyBrush}"/>
                            <Setter Property="Background" Value="{StaticResource BackgroundGrey3Brush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListBoxItem}" x:Key="ListBoxItemStyle">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="4,2,0,2" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            Padding="{TemplateBinding Padding}" 
                            SnapsToDevicePixels="true">
                        <ContentPresenter 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>


                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" 
                                Value="{StaticResource SelectedBrush}"/>
                        </MultiTrigger>



                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" 
                                Value="{StaticResource SelectedBrush}" />

                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource HoverGrey}" Opacity="0.5"/>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>


                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" 
                                Value="{StaticResource HoverGreyBrush}"/>
                        </MultiTrigger>

                        <!--<Trigger Property="IsEnabled" Value="False">
                        <Setter TargetName="Bd" Property="TextElement.Foreground" 
                                Value="{StaticResource MidGrayBrush}"/>
                    </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DarkScrollBar" TargetType="{x:Type ScrollBar}">
	    <Setter Property="Background" Value="Transparent" />
	    <Setter Property="Foreground" Value="Gray" />
	    <Setter Property="Template">
		    <Setter.Value>
			    <ControlTemplate TargetType="ScrollBar">
				    <Grid>
					    <Track Name="PART_Track" 
					           Orientation="{TemplateBinding Orientation}" 
					           IsDirectionReversed="True">
						    <Track.DecreaseRepeatButton>
							    <RepeatButton Style="{x:Null}" />
						    </Track.DecreaseRepeatButton>
						    <Track.Thumb>
							    <Thumb Background="DarkGray" />
						    </Track.Thumb>
						    <Track.IncreaseRepeatButton>
							    <RepeatButton Style="{x:Null}" />
						    </Track.IncreaseRepeatButton>
					    </Track>
				    </Grid>
			    </ControlTemplate>
		    </Setter.Value>
	    </Setter>
    </Style>


    <Style TargetType="{x:Type ListBox}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxItemStyle}"/>
        <Setter Property="Background" Value="{StaticResource BackgroundGrey3Brush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrushBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{StaticResource FontGreyWhiteBrush}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="1" SnapsToDevicePixels="true">
                        <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Selector.IsSelectionActive" Value="True">
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource BorderBrushBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource BackgroundGrey3Brush}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource BorderBrushBrush}"/>
                        </Trigger>


                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TGEHubWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrushBrush}"/>
        <Setter Property="Background" Value="{StaticResource BackgroundBlackBrush}"/>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome 
                    CornerRadius="2"
                    ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}"
                    GlassFrameThickness="0" CaptionHeight="20"
                    NonClientFrameEdges="None"
                    UseAeroCaptionButtons="False"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="BorderThickness" Value="1"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=WindowState}" Value="Maximized">
                                        <Setter Property="BorderThickness" Value="{Binding Source={x:Static SystemParameters.WindowResizeBorderThickness}}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>

                        <Grid>
                            <AdornerDecorator>
                                <ContentPresenter Margin="0,24,0,0"/>
                            </AdornerDecorator>

                            <DockPanel VerticalAlignment="Top" LastChildFill="False">
                                <DockPanel.Resources>
                                    <Style TargetType="Path">
                                        <Setter Property="Stroke" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
                                        <Setter Property="StrokeThickness" Value="1"/>
                                    </Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource SimpleButton}">
                                        <Setter Property="Width" Value="30"/>
                                        <Setter Property="Height" Value="20"/>
                                        <Setter Property="Margin" Value="0,2,1,0"/>
                                        <Setter Property="VerticalAlignment" Value="Top"/>
                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                        <Setter Property="DockPanel.Dock" Value="Right"/>
                                        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
                                    </Style>
                                </DockPanel.Resources>

                                <!--<Image Source="pack://application:,,,/TGE Hub;component/Resources/TGA_LOGO_WHITE.png" 
                                    Width="100" Height="24" Margin="5,2,0,0" DockPanel.Dock="Left" VerticalAlignment="Center"/>-->

                                <TextBlock Margin="5,2,0,0" VerticalAlignment="Center"
                                           DockPanel.Dock="Left" FontWeight="Bold"
                                           FontSize="14"
                                           Foreground="{StaticResource FontWhiteBrush}"
                                           Text="{TemplateBinding Title}"/>

                                <Button x:Name="btnClose" Click="OnClose_Button_Click" >
                                    <Button.Content>
                                        <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                            <Path Data="M1,1.5L 8,8.5" StrokeThickness="2" Stroke="{StaticResource IconBrush}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                            <Path Data="M1,8.5L 8,1.5" StrokeThickness="2" Stroke="{StaticResource IconBrush}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        </Grid>
                                    </Button.Content>
                                </Button>
                            </DockPanel>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
